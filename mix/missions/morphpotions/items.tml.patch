add: -

	-- before we start, [color ] doesn't seem to be working

	-- #region Potions from tf_items.txt, don't forget to shuffle later.
	__marker: tf_items.txt

	item: ponifier
		_n: Element of Perversion
		test
		description: "A [color ]bottle that turns you into a little pony."
		unknown: "A [color ]bottle with a picture of a small cartoon horse. What on earth could this do?"
		ascii
			char: 0x180
			fore: aquamarine
		randomized: 1
		potion
		transformer
		script
			<[[
				Consume()
				Message(user.Morph("littlepony"))
				Identify()
			]]>

	-- merged with fox morph potion
	item: foxite
		test
		description: "A [color ]bottle of foxite. It turns you into a fox with repeated usages."
		unknown: "A [color ]bottle with a picture of fox."
		ascii
			char: 0x180
			fore: aquamarine
		randomized: 2
		potion
		transformer
		script
			<[[
				Consume()
				Message(user.Morph("kitsune"))
				Identify()
			]]>

	-- merged with cat morph potion
	item: odd_nip
		test
		description: "A [color ]bottle of odd nip. It turns you into a felin with repeated usages."
		unknown: "There is no label on this [color ]bottle, but you could swear you can hear a felin giggling in the distance."
		ascii
			char: 0x180
			fore: aquamarine
		randomized: 3
		potion
		transformer
		script
			<[[
				Consume()
				Message(user.Morph("felin"))
				Identify()
			]]>

	item: spidermorph
		_n: spider morph potion
		wip
		description: "A [color ]bottle of spider morph potion. It turns you into a spider girl with repeated usages."
		unknown: "A [color ]bottle filled with a thick liquid. There's a creepy picture of a spider on the label."
		ascii
			char: 0x180
			fore: mistyrose
		randomized: 11
		potion
		transformer
		script
			<[[
				Consume()
				for i=0, 10 do
					Message(user.Morph("spider", Gender.Female))
				end
				Identify()
			]]>

	item: dogmorph
		_n: dog morph potion
		wip
		description: "A [color ]bottle of dog morph potion. It turns you into a canid with repeated usages."
		unknown: "A [color ]bottle filled with a thick liquid. There's a picture of a canid on the label."
		ascii
			char: 0x180
			fore: mistyrose
		potion
		transformer
		script
		disabled
			<[[
				Consume()
				-- todo, dogperson bodyplan
				-- Message(user.Morph("felin"))
				Identify()
			]]>


	item: bunnymorph
		_n: bunny morph potion
		wip
		description: "A [color ]bottle of nunny morph potion. It turns you into a rabbit with repeated usages."
		unknown: "A [color ]bottle filled with a thick liquid. There's a picture of a bunny on the front."
		ascii
			char: 0x180
			fore: skyblue
		potion
		transformer
		disabled
		script
			<[[
				Consume()
				-- todo, bunnyperson bodyplan
				-- Message(user.Morph("felin"))
				Identify()
			]]>

	item: demonite_potion
		description: "A [color ]bottle with a stylized but recognizable demon on the label. Very indicative of what it turns the user into."
		unknown: "A [color ]bottle with a stylized but recognizable demon on the label."
		ascii
			char: 0x180
		randomized: 4
		potion
		transformer
		script
			<[[
				Consume()
				Message(user.Morph("foocubus"))
				Identify()
			]]>

	item: chaos_potion
		description: "Chaos in a [color ]bottle."
		unknown: "A [color ]bottle with fluid that fizzes and pops."
		ascii
			char: 0x180
		randomized: 5
		potion
		transformer
		script
			<[[
				Consume()
				ReportSet(user.Mutate(1, 10, Mutations.Random))
				Identify()
			]]>

	item: enhanced_chaos_potion
		description: "Concentrated chaos in a [color ]bottle."
		unknown: "A [color ]bottle with fluid that fizzes and pops violently."
		ascii
			char: 0x180
		randomized: 6
		potion
		transformer
		script
			<[[
				Consume()
				if Random.Flip() then
					ReportSet(user.Mutate(1, 30, Mutations.Random))
				else
					ReportSet(user.Mutate(2, 15, Mutations.Random))
				end
				Identify()
			]]>


	item: tentacle_potion
		description: "A [color ]bottle with some sort of tentacle on the label. It seems to give you a tentacle cock."
		unknown: "A [color ]bottle with what seems to be a vine on the label."
		ascii
			char: 0x180
		randomized: 7
		potion
		transformer
		script
			<[[
				Consume()
				local ret : string = ""
				local totalDicks = user.GetPenisSizes().Length
				local transformations : int = 0
				local lengthenings : int = 0

				if totalDicks > 0 then
					foreach d in user.GetPenises() do
						if d.Text == "tentacle" then
							local length = d.GetToken("length")
							length.Value = length.Value + 3 + Random.Next(5)
							lengthenings = lengthenings + 1
							-- Randomly break out
							if lengthenings > 0 and Random.Flip() then
								break
							end
						end
					end

					foreach d in user.GetPenises() do
						if d.Text ~= "tentacle" then
							d.Text = "tentacle"
							transformations = transformations + 1
							-- Randomly break out
							if transformations > 0 and Random.Flip() then
								break
							end
						end
					end

					if transformations > 0 then
						if transformations == 1 then
							if totalDicks == 1 then
								ret = "[Yourornames] [?:cock] "
							elseif totalDicks == tranformations then
								ret = "[Yourornames] [?:cocks] "
							elseif transformations == 1 then
								ret = "One of [yourornames] [?:cocks] "
							else
								ret = "Some of [yourornames] [?:cocks] "
								-- ret = ret .. "(" .. transformations .. " of " .. totalDicks .. ") "
							end
							ret = ret .. "has turned into a wriggly tentacle"
						else
							ret = "[Yourornames] [?:cocks] have turned into wriggly tentacles"
						end
					end

					if lengthenings > 0 then
						if transformations > 0 then
							ret = ret .. " and "
							if lengthenings == transformations then
								ret = ret .. ""
							elseif lengthenings < totalDicks then
								if lengthenings == 1 then
									ret = ret .. "one "
								else
									ret = ret .. "some "
									-- ret = ret .. "(" .. lengthenings .. " of " .. totalDicks .. ")"
								end
							end
						else
							if totalDicks == 1 then
								ret = "[Yourornames] [?:cock] "
							elseif totalDicks == lengthenings then
								ret = "[Yourornames] [?:cocks] "
							else
								ret = "One of [yourornames] [?:cocks] "
							end
						end
						if lengthenings == 1 then
							ret = ret .. "has "
						else
							ret = ret .. "have "
						end
						ret = ret .. "grown longer"
					end
					ret = ret .. "!"
				else
					local penis = user.AddToken("penis", "tentacle")
					penis.AddToken("thickness", 2 + Random.Next(2), nil)
					penis.AddToken("length", 15 + Random.Next(4), nil)
					ret = "[Youorname] [has] grown a wriggly tentacle dick!"
				end
				print(ret)
				Identify()
			]]>

	-- merged with 'penificator'
	item: cock_potion
		description: "A [color ]bottle with what seems to be an erect penis on the label. It causes the user to grow a cock."
		unknown: "A [color ]bottle with what seems to be an erect penis on the label."
		ascii
			char: 0x180
		randomized: 8
		potion
		transformer
		script
			<[[
				Consume()
				local ret : string = ""
				local totalDicks = user.GetPenisSizes().Length
				local lengthenings : int = 0
				local additions : int = 0

				if totalDicks > 0 then
					foreach d in user.GetPenises() do
						local length = d.GetToken("length")
						length.Value = length.Value + 3 + Random.Next(5)
						lengthenings = lengthenings + 1
						-- Randomly break out
						if lengthenings > 0 and Random.Flip() then
							break
						end
					end
				else
					local penis = user.AddToken("penis", "human")
					penis.AddToken("thickness", 2 + Random.Next(2), nil)
					penis.AddToken("length", 15 + Random.Next(4), nil)
					additions = 1
				end

				if lengthenings == 0 then
					if additions == 0 then
						ret = "Nothing seems to have happened."
					else
						ret = "[Youorname] [has] grown a [?:cock]!"
						Identify()
					end
				else
					if lengthenings == totalDicks then
						if totalDicks == 1 then
							ret = "[Yourornames] [?:cock] has grown longer."
						else
							ret = "[Yourornames] [?:cocks] have grown longer."
						end
					elseif lengthenings == 1 then
						ret = "One of [yourornames] [?:cocks] has grown longer."
					end
					Identify()
				end

				if Random.Flip() and Random.Flip() and Random.Flip() then
					if user.HasToken("vagina") then
						user.RemoveToken("vagina")
						if lengthenings + additions == 0 then
							ret = "[Youorname] seem{s} to have lost "
						else
							ret = ret .. " But it seems [he] also lost "
						end
						if user.HasToken("vagina") then
							ret = ret .. "one of [his] [?:pussies]."
						else
							ret = ret .. "[his] [?:pussy]."
						end
					end
				end
				print(ret)
			]]>

	item: corrupted_cock_potion
		description: "A [color ]bottle with what seems to be a turgid penis on the label, that rather aggressively grows you a cock."
		unknown: "A [color ]bottle with what seems to be a turgid penis on the label."
		ascii
			char: 0x180
		randomized: 9
		potion
		transformer
		script
			<[[
				Consume()
				local ret : string = ""
				local totalDicks = user.GetPenisSizes().Length
				local lengthenings : int = 0
				local additions : int = 0

				if totalDicks > 0 then
					foreach d in user.GetPenises() do
						local length = d.GetToken("length")
						length.Value = length.Value + 3 + Random.Next(5)
						lengthenings = lengthenings + 1
						-- Randomly break out
						if lengthenings > 0 and Random.Flip() then
							break
						end
					end
				end

				if Random.Flip() and Random.Flip() then
					local penis = user.AddToken("penis", "human")
					penis.AddToken("thickness", 2 + Random.Next(2), nil)
					penis.AddToken("length", 15 + Random.Next(4), nil)
					additions = 1
				end

				if lengthenings + additions == 0 then
					ret = "Nothing seems to have happened."
				else
					if lengthenings == totalDicks then
						if totalDicks == 1 then
							ret = "[Yourornames] [?:cock] has grown longer."
						else
							ret = "[Yourornames] [?:cocks] have grown longer."
						end
					elseif lengthenings == 1 then
						ret = "One of [yourornames] [?:cocks] has grown longer."
					end
					if additions == 1 then
						if lengthenings == 0 then
							ret = "[Youorname] [has] grown "
						else
							ret = ret .. " Plus, [he] [has] grown "
						end
						if totalDicks == 0 then
							ret = ret .. "a [?:cock]!"
						else
							ret = ret .. "one extra!"
						end
					end
					Identify()
				end

				if Random.Flip() then
					if user.HasToken("vagina") then
						user.RemoveToken("vagina")
						if lengthenings + additions == 0 then
							ret = "[Youorname] seem{s} to have lost "
						else
							ret = ret .. " But it seems [he] also lost "
						end
						if user.HasToken("vagina") then
							ret = ret .. "one of [his] [?:pussies]."
						else
							ret = ret .. "[his] [?:pussy]."
						end
						Identify()
					end
				end
				print(ret)
			]]>

	item: neutralizer_potion
		description: "A [color ]bottle with what seems to be a penis with a big red 'forbidden' circle on the label. It removes your genitalia. If it were a cream you might've been able to choose which."
		unknown: "A [color ]bottle with what seems to be a penis with a big red 'forbidden' circle on the label."
		ascii
			char: 0x180
		randomized: 10
		potion
		transformer
		script
			<[[
				Consume()
				local ret = ""
				local loss = 0

				function LoseCock()
					user.RemoveToken("penis")
					if (user.HasToken("penis")) then
						ret = "One of your cocks disappears!"
					else
						ret = "Your cock's gone!"
					end
				end

				function LoseVagina()
					user.RemoveToken("vagina")
					if (user.HasToken("vagina")) then
						ret = "One of your pussies disappears!"
					else
						ret = "Your pussy's gone!"
					end
				end

				if user.HasToken("penis") then
					loss = loss + 1
				end
				if user.HasToken("vagina") then
					loss = loss + 2
				end

				if loss == 1 then
					LoseCock()
				elseif loss == 2 then
					LoseVagina()
				elseif loss == 3 then
					if (Random.Flip()) then
						LoseCock()
					else
						LoseVagina()
					end
				end

				local boobs = user.GetToken("breasts")
				if (boobs.Path("nipples/canfuck") and not donehere) then
					boobs.GetToken("nipples").RemoveToken("canfuck")
					ret = ret .. "  The cocks on your breasts shrink back into regular nipples."
				elseif (boobs.Path("nipples/fuckable") and not donehere) then
					boobs.GetToken("nipples").RemoveToken("fuckable")
					ret = ret .. "  The pussies on your breasts shrink back into regular nipples."
				end

				if ret == "" then ret = "You feel no more gential-less than usual." end
				print(ret)
				Identify()
			]]>

	-- #endregion

